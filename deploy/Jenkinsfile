pipeline {
    agent any

    environment {
        ARTIFACTORY_REPO = "https://releases.jfrog.io/artifactory/artifactory-debs"
        DISTRO = sh(script: "lsb_release -cs", returnStdout: true).trim()
    }

    stages {
        stage('Uninstall Artifactory') {
            steps {
                script {
                    // Uninstall any existing Artifactory
                    sh """
                    sudo apt-get remove --purge -y jfrog-artifactory-oss
                    sudo apt-get autoremove -y
                    sudo rm -rf /opt/jfrog
                    sudo rm -rf /var/opt/jfrog
                    sudo rm -f /etc/apt/sources.list.d/jfrog-artifactory.list
                    sudo rm -f /etc/apt/trusted.gpg.d/jfrog.asc
                    sudo apt-get update
                    """
                }
            }
        }

        stage('Install JFrog Artifactory') {
            steps {
                script {
                    // Add the Artifactory repository and install it
                    sh """
                    sudo sh -c 'echo "deb ${ARTIFACTORY_REPO} ${DISTRO} main" > /etc/apt/sources.list.d/jfrog-artifactory.list'
                    curl -fsSL https://releases.jfrog.io/artifactory/api/gpg/key/public | sudo tee /etc/apt/trusted.gpg.d/jfrog.asc
                    sudo apt-get update
                    sudo apt-get install -y jfrog-artifactory-oss
                    """
                }
            }
        }

        stage('Start Artifactory') {
            steps {
                script {
                    // Start Artifactory service
                    sh """
                    sudo systemctl enable artifactory
                    sudo systemctl start artifactory
                    """
                }
            }
        }

        stage('Verify Installation') {
            steps {
                script {
                    // Verify if Artifactory is running
                    sh """
                    sudo systemctl status artifactory
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
